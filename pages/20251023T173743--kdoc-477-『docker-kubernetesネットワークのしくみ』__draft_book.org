:properties:
:ID: 20251023T173743
:end:
#+title:      KDOC 477: 『Docker-Kubernetesネットワークのしくみ』
#+date:       [2025-10-23 Thu 17:37]
#+filetags:   :draft:book:
#+identifier: 20251023T173743

#+begin_comment
(kd/denote-kdoc-rename)
(kd/denote-format)

====ポリシー。
1ファイル1アイデア。
1ファイルで内容を完結させる。
常にほかのエントリとリンクする。
自分の言葉を使う。
参考文献を残しておく。
文献メモの場合は、感想と混ぜないこと。1つのアイデアに反する
ツェッテルカステンの議論に寄与するか。それで本を書けと言われて書けるか
頭のなかやツェッテルカステンにある問いとどのようにかかわっているか
エントリ間の接続を発見したら、接続エントリを追加する。カード間にあるリンクの関係を説明するカード。
アイデアがまとまったらアウトラインエントリを作成する。リンクをまとめたエントリ。
エントリを削除しない。古いカードのどこが悪いかを説明する新しいカードへのリンクを追加する。
恐れずにカードを追加する。無意味の可能性があっても追加しておくことが重要。
個人の感想・意思表明ではない。事実や書籍情報に基づいている

====永久保存メモのルール。
自分の言葉で書く。
後から読み返して理解できる。
他のメモと関連付ける。
ひとつのメモにひとつのことだけを書く。
メモの内容は1枚で完結させる。
論文の中に組み込み、公表できるレベルである。

====水準を満たす価値があるか。
その情報がどういった文脈で使えるか。
どの程度重要な情報か。
そのページのどこが本当に必要な部分なのか。
公表できるレベルの洞察を得られるか

====フロー。
1. 「走り書きメモ」「文献メモ」を書く
2. 1日1回既存のメモを見て、自分自身の研究、思考、興味にどのように関係してくるかを見る
3. 追加すべきものだけ追加する

#+end_comment

* この文書のステータス
- 作成
  - [ ] <署名>
# (progn (kill-line -1) (insert (format "  - [X] %s 貴島" (format-time-string "%Y-%m-%d"))))
- レビュー
  - [ ] <署名>
# (progn (kill-line -1) (insert (format "  - [X] %s 貴島" (format-time-string "%Y-%m-%d"))))

# チェックリスト ================
# 関連をつけた。
# タイトルがフォーマット通りにつけられている。
# 内容をブラウザに表示して読んだ(作成とレビューのチェックは同時にしない)。
# 文脈なく読めるのを確認した。
# おばあちゃんに説明できる。
# いらない見出しを削除した。
# タグを適切にした。
# すべてのコメントを削除した。
* 概要
# 本文(見出しも設定する)
- VXLANはVLANの拡張で、大規模なネットワークを仮想的に分割できる。EthernetフレームをUDP/IPパケットでカプセル化する。このカプセル化により、Ethernetフレームは自身のIPアドレスやMACアドレスを変更することなく、異なるネットワークセグメント間を移動できポータビリティが向上する(p15)
- Networ Namespace(netns)を使用することでネットワークスタックを異なるNamespaceに分離し、互いに独立して動作させられる(p15)

#+begin_src
アプリ
  - HTTP

|
| システムコール
v------

カーネル
  - TCP
  - IP
  - Ethernet
|
|------
v
- ハードウェア
  - NIC
#+end_src

- ソケットにはIPアドレスとポート番号の組み合わせが記録され、通信元と通信先を指定している(p19)
- 3way handshake のメリット(p20)
  - 相手先に転送を始めることを通知できる
  - 要求のあったポートを受け入れられるかチェックできる
  - 再送制御や流量制御ができる
- IP層の役割は、TCP層から受け取ったデータにIPパケットを付与し、下位レイヤのL2にデータを送ること(p21)
- ルーティングテーブルはルーティングプロトコルによって作成され、パケットが目的地に到達するための最良の経路を記録するしくみになっている。ルーティングプロトコルにはRIP, OSPF, BGPなどがある(p24)
- Dockerではdocker0という仮想ブリッジがデフォルトで設定されている。このブリッジはコンテナが外部と通信するためのゲートウェイの役割を果たす(p25)

#+begin_src shell
apt install bridge-utils
brctl show docker0
#+end_src

#+RESULTS:
#+begin_src
bridge name	bridge id		STP enabled	interfaces
docker0		8000.0242014087d9	no		veth8461c84
							vethd66994d
#+end_src

- VLANは、物理ポートにIDを設定し、セグメントを分ける技術である。VLANを使わない場合は１つのスイッチに対して１つのセグメントしか設定できない(p34)
- VLANの利点の１つは、複数のスイッチにまたがっても同一セグメント(Ethernetフレームをもとに通信が行われる範囲)として扱えることである。複数のスイッチを連携させて１つの大規模なL2ネットワークを構築できる。Ethernetフレームだけを見るのでIPアドレスのセグメントは変わらない(p34)
- VXLANとは、同じL2ネットワーク上のEthernetフレームをL3ネットワークを介して送り届けられる技術である(p35)
- パケットはネットワークデバイスを通過するときルーティングのためにそのパケットのヘッダ情報が書き換えられる(p36)
- iptables の項目(p55)
  - テーブル: 処理機能を設定する
  - チェイン: ルールを適用するタイミングを設定する
  - ターゲット: iptablesルールに一致したパケットに対してどのようなアクションを取るか定義する
- PREROUTINGチェインによるNAT変換が行われたあとにINPUT, OUTPUT, FORWARDが適用される。そのためフィルタリングルールを設定するときにはNAT変換後の情報を使うことが重要である(p57)

疑問や感想。

- ブリッジ・スイッチ・ルーターの違い
- フレームとパケットの違い
- コンテナにもMACアドレスがある
- コンテナのフラッティングとARPの違いがわからない(p27)
- VXLANはL3ネットワーク上に仮想的なL2ネットワークを作り出すことからネットワークオーバーレイと呼ばれる(p35)
- VXLANはEthernetフレームをUDP/IPでカプセル化するため、元のEthernetフレームの外側にさらにEthernetヘッダやIPヘッダがつけられる。これを「外部ヘッダ」という。もともとのEthernetフレーム内のヘッダは「内部ヘッダ」という(p35)
- iptables から、Dockerをインストールした状態のチェインの流れを図示する(p60)

* 関連
# 関連するエントリ。なぜ関連させたか理由を書く。意味のあるつながりを意識的につくる。
# - この事実は自分のこのアイデアとどう整合するか。
# - この現象はあの理論でどう説明できるか。
# - ふたつのアイデアは互いに矛盾するか、互いを補っているか。
# - いま聞いた内容は以前に聞いたことがなかったか。
# - メモ y についてメモ x はどういう意味か。
# - 対立する
# - 修正する
# - 補足する
# - 付け加えるもの
# - アイデア同士を組み合わせて新しいものを生み出せないか
# - どんな疑問が浮かんだか
なし。
